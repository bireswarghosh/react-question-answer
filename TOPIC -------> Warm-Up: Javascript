



TOPIC -------> Warm-Up: Javascript





1 What will be the output of the following code?

let x = 42;
if (true) {
console.log(x);
let x = 1337;
} 

  Solution : Error                                                                                                                                                                            1  B
 


2  Guess the Output:
const KEY = 'coding_ninjas';
if (true) {
    const KEY = 'ES6';
}
console.log(KEY);

  Solution :    coding_ninjas




3  Find the output:
var temp= 'hello';
function display(){
    console.log(temp);
    var temp = 'bye';
};
display();

  Solution : undefined   




4  What is the final value of array below?

var array = [1, 2, 3]
const array1 = [4, 5, 6]
var arr1 = array.map(a => a * 2);

array = [...array1, ...arr1]

  Solution :    [4,5,6,2,4,6]




5  A student is creating a list of electronics items he wants to buy with decreasing priority(highest priority item at 0 index).
Electronics=['Mobile', 'Watch', 'Kindle']. 
But due to college requirements, he wants to keep a certain item as his first priority. Can you add that item at the start to create a new priority list using the spread operator?
  
  Solution :  function newPriorityList(item) {
    var Electronics=['Mobile', 'Watch', 'Kindle'];
    // write your code here
       var priorityList = [item, ...Electronics];
    return priorityList;
}


// Input and output has already been handled for you

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let remainder = '';
process.stdin.on('data', function (chunk) {
    var ans=newPriorityList(chunk);
    for(var i=0; i<ans.length; i++)
    {
        process.stdout.write(ans[i]+'\n');
    }
    process.exit();
});




6  What is the output of the following code?
function foo(x, ...y) {
   return x * y.length
}
foo(4,1,2,30);

  Solution :   12 



7  Sum of N numbers
 
Write a program for printing the sum of given numbers.
Input :

1 2 3 4
Output:

10


Input:

4 1 3 1 1 1 2
Output:

13

  Solution :  function sumOfNumbers(...args) {  
    // write your code here

    
  return args.reduce((sum, num) => sum + num, 0);


    
}


// Input and output has already been handled for you

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let remainder = '';
process.stdin.on('data', function (chunk) {
    var arr = [];
    var a = chunk.toString().split(' '); 
    for(var i=0; i<a.length; i++)
    {
        arr.push(parseInt(a[i]));
    }
    ans = sumOfNumbers(...arr);
    var ans1 = ""+ans;
    process.stdout.write(ans1);
    process.exit();
});  






8  When we see "..." in the code, it is either rest parameters or the spread syntax. So, What is the difference between them?
  Solution :  The spread operator is used to transform an array into its individual elements whereas the rest parameters are used to transform individual elements into an array. Also, the spread operator is used when calling a function whereas the rest parameters are used in the function parameters.

 - When ... is at the end of function parameters, it’s “rest parameters” and gathers the rest of the list of arguments into an array.
 - When ... occurs in a function call or alike, it’s called a “spread syntax” and expands an array into a list.  







9  Find the output of the code below:
for (var i = 0; i < 5; i++) {
  setTimeout(function() { console.log(i); }, i * 1000 );
}

  Solution :  55555  





10  How does the arrow function differ from other functions?
 
 Solution :    Implicitly returns values
Is anonymous
Inherits the value of this from its enclosing scope










11  var title = "A Passage to India";
var author = "E.M. Forster";

var novel = {
   title: "Pride and Prejudice",
   author: "Jane Austen",
   print: function() {
       console.log(this.title);
       console.log(this.author);
   }
}

novel.print();
What will be the output of the above program?
1. Uncaught ReferenceError: this is not defined
Uncaught ReferenceError: this is not defined
2. A Passage to India
E.M. Forster
3. Pride and Prejudice
Jane Austen

  Solution :    3








12  You have to filter all the students with marks greater than the given grades. Complete the given function and return the object.
const students = [
  { name: 'Anjali', grade: 96 },
  { name: 'Navdeep', grade: 84 },
  { name: 'Varun', grade: 100 },
  { name: 'Bhavya', grade: 65 },
  { name: 'Shiva', grade: 90 }
];

  Solution :     function studentGrades(grade) {
    const students = [
        { name: 'Anjali', grade: 96 },
        { name: 'Navdeep', grade: 84 },
        { name: 'Varun', grade: 100 },
        { name: 'Bhavya', grade: 65 },
        { name: 'Shiva', grade: 90 }
      ];
    //Write your code here

   
    const filteredStudents = students.filter(student => student.grade >= grade);
    return filteredStudents;

}


// Input and output has already been handled for you


process.stdin.resume();
process.stdin.setEncoding("utf-8");

let remainder = '';
process.stdin.on('data', function (chunk) {
    let t = parseInt(chunk);
    let ans = studentGrades(t);
    for(var i=0; i<ans.length; i++)
    {
        process.stdout.write(ans[i].name+'\n');
    }
    process.exit();
});







13  Suppose you have given an array of numbers and you have to convert all the numbers into their perfect squares. Which of the following array functions are useful to accomplish this?
  Solution :   map() 








14  Remove duplicates from an array using reduce().
Input Format: Given an array as input

Output Format: Return the answer in the form of array after removing duplicates.



Sample Input:

a b c d a b b c d
Sample Output:

a b c d

  Solution :    function remDup(arr) {  
    // write your code here
    // Use reduce to iterate over the array
  var result = arr.reduce(function (accumulator, current) {
    // Check if the current element is already present in the accumulator
    if (accumulator.indexOf(current) === -1) {
      // If not present, add it to the accumulator
      accumulator.push(current);
    }
    return accumulator;
  }, []);
  
  return result;
    
}



// Input and output has already been handled for you

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let remainder = '';
process.stdin.on('data', function (chunk) {
    var arr = [];
    var a = chunk.toString().split(' '); 
    for(var i=0; i<a.length; i++)
    {
        arr.push(parseInt(a[i]));
    }
    ans = remDup(arr);
    ans.sort();
    for(var i=0; i<ans.length; i++)
    {
        process.stdout.write(ans[i]+' ');
    }
    process.exit();
});







15  Choose the correct output.
const scores = [22, 33]
const [math, science = 50, arts = 50, sst] = scores
console.log(math,science,arts,sst);

  Solution :    22 33 50 undefined








16  const colors = [
      'Red',
      'Orange',   
      'Purple',
      'Brown',
      'Gray',
      'Pink'
    ];
const [primary, ,secondary,...others] = colors;
console.log(primary, secondary, others);
What will be the output?


  Solution :    Red Purple [‘Brown’, ‘Gray’, ‘Pink’]







17  Which of the following options correctly represents the output of the following code?
function greet({ name, greeting='hello' }) {
  console.log(`${greeting}, ${name}!`)
}
const person = { name: 'Aayushi', dept: 'tech', greeting: 'Welcome'};
greet(person);

  Solution :    Welcome, Aayushi








18  You are given an object which has details of a particular class. Complete the function so that it returns the details of the student at i th index in the form of an array.
Input Format: Given the index (i) of the student whose details should be printed.

Output Format: An array containing name and roll no of the student.



Sample Input:

1
Sample Output

Bhavya
2

  Solution :    function studentDetails(i) { 
    var classDetails = {
        classTeacher: 'Anjani',
        students: [{name: "Anjali", roll: "1"}, {name: "Bhavya", roll: "2"}, {name: "Neha", roll: "3"}]
    };
    // write your code here
      var student = classDetails.students[i];
  var details = [student.name, student.roll];

  return details;
    
}


// Input and output has already been handled for you

process.stdin.resume();
process.stdin.setEncoding("utf-8");

let remainder = '';
process.stdin.on('data', function (chunk) {
    let t = parseInt(chunk);
    let ans = studentDetails(t);
    for(var i=0; i<ans.length; i++)
    {
        process.stdout.write(ans[i]+'\n');
    }
    process.exit();
});


 
           |
           |
           |
          \|/
|=|================================|=|
|=|     # THANK YOU FOR SEE IT     |=|
|=|         # PLEASE FOLLOW        |=|
|=|   # RATE MY REPOSITORY ⭐ !!!  |=|
|=|=================================|=|
 




